#Resposta 1
Pergunta: Para as questões 2 a 5, considere que as variáveis f, g, h, i e j são do tipo inteiro (16 bits na arquitetura do MSP430), e que o vetor A[] é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores: f: R4 g: R5 h: R6 i: R7 j: R8 A: R9 Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.
Escreva os trechos de código assembly do MSP430 para: 
(a) Somente setar o bit menos significativo de R5. 
   bis.w #0001h,R5;
   
(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo. 
   bis.w #0003h,R6;
   
(c) Somente zerar o terceiro bit menos significativo de R7.
   bic.w #0004h,R7;
   
(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
   bic.w #0005h,R8;
   
(e) Somente inverter o bit mais significativo de R9. 
   xor.w #1000h,R9;
   
(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.
   xor.w #F000h, R9;
   bis.w #000Fh,R9;
   
#Resposta 2
Pergunta: "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

if(i>j) f = g+h+10;
else f = g-h-10;

  cmp.w R7,R8
        jge.w R7,R8;
            add.w r4,r5
            add.w #10,R5
            mov.w R5,R4	
        jump exit
            sub.w r4,r5
            sub.w #10,R5
            mov.w R5,R4

#Resposta 3
Pergunta: "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	while(save[i]!=k) i++;

loop :  mov.w R12, R7
	rla.w R12 ; O vetor save [] é do tipo inteiro, portanto é necessario multplicar por 2 para andar pelas posições do vetor
	add.w R10,R12
	cmp.w 0(R12),R9
	jeq.w ret
	inc.w R7
	jmp loop
ret:  	ret


